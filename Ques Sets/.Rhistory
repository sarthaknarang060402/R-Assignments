meanx
meany=sum(y*c)
meany
func2=function(x,y) ((x+y)/30)*x*y
x=c(0:3)
y=c(0:2)
m2=matrix(c(func2(0,0:2),func2(1,0:2),func2(2,0:2),func2(3,0:2)),nrow=4,ncol=3,byrow=TRUE)
m2
meanxy=sum(m2)
meanxy
varx=sum(x^2*r)-meanx^2
varx
vary=sum(y^2*c)-meany^2
vary
covariance = (meanxy)-(meanx*meany)
covariance
correlation=covariance/(sqrt(varx)*sqrt(vary))
correlation
gc()
#Assignment1
#q1
vec1=c(5,10,15,20,25,30)
vec2=[5:30:5]
vec2=5:30
vec2=seq(5,30,by=5)
max(vec2)
min(vec1)
#Assignment1
#q1
vec1=c(5,10,15,20,25,30)
min(vec1)
#q2
a=readline()
a=as.integer(a)
f=1
while(a>0){
f=f*a
a=a-1
}
f
#q3
fibo = function(n){
if(n<=1){
return(1)
} else{
return (fibo(n-1)+fibo(n-2))
}
}
n=as.integer(readline("Enter number: "))
for(i in 0:(n-1)){
print(fibo(i))
}
n=as.integer(readline("Enter number: "))
for(i in 0:(n-1)){
print(fibo(i))
}
vect1= c(0,1,2)
vect2= c(1,2,3)
vect3= c(5,6,7)
m= list(vect1, vect2, vect3)
t= data.frame(vect1,vect2,vect3)
t
#q1
#a
space=c()
space[1:20]='gold'
space[21:50]='silver'
space[52:100]='bronze'
print(sample(space,10))
print(sample(space,10))
space[1:20]='gold'
space[21:50]='silver'
space[51:100]='bronze'
print(sample(space,10))
#b
space=c('S','F')
sample(space,10,replace=TRUE,prob=c(0.9,0.1))
#b
space=c('S','F')
sample(space,10,replace=TRUE,prob=c(0.9,0.1))
sample(space,10,replace=TRUE,prob=c(0.9,0.1))
sample(space,10,replace=TRUE,prob=c(0.9,0.1))
sample(space,10,replace=TRUE,prob=c(0.9,0.1))
perms(5)
perms(5,2)
Total = c(rep("Gold",20),rep("Silver",30),rep("Bronze",50))
sample(Total,10)
total1=c("Sucess","Failure")
sample(total1,10,replace=TRUE,prob=c(0.9,0.1))
low = c(72.68,72.62,72.58,72.48,73.07,72.55,72.42,72.84,72.58,72.92)
high=  c(71.62,71.68,71.74,71.48,71.55,71.52,71.71,71.56,71.70,71.50)
data <- data.frame(low,high)
dotchart(data$low, pch = 21,bg = "green",
pt.cex = 1.5, xlim = range(data$low, data$high) + c(-2, 2))
points(data$high,1:nrow(data), col = "red", pch = 19, cex = 1.5)
#or
birthday<-function(n=0){
return(1-choose(365,365-n)*factorial(n)/365^n)
}
print(birthday(as.integer(readline())))
#q3
cond = function(pA,pB,pAgB){
pBgA=pAgb*pB/pA
return pBgA
#q3
cond = function(pA,pB,pAgB){
pBgA=pAgb*pB/pA
return(pBgA)
}
print(cond(0.40,0.20,0.85))
#q3
cond = function(pA,pB,pAgB){
pBgA=pAgB*pB/pA
return(pBgA)
}
print(cond(0.40,0.20,0.85))
#q3  x is |  , u is union
prob <- function(pA, pB, pBA) {
pAB <- pA * pBA / pB
return(pAgB)
}
pRain <- 0.2
pCloudy <- 0.4
pCloudyRain <- .85
prob(pRain, pCloudy, pCloudyGivenRain)
#q3  x is |  , u is union
prob <- function(pA, pB, pBA) {
pAgB <- pA * pBA / pB
return(pAgB)
}
pRain <- 0.2
pCloudy <- 0.4
pCloudyRain <- .85
prob(pRain, pCloudy, pCloudyGivenRain)
prob(pRain, pCloudy, pCloudyRain)
#q4
data(iris)
head(data,5)
#q4
a=data(iris)
head(a,5)
#q4
data(iris)
head(iris,5)
str(iris)
range(iris$Sepal.Length)
range(iris$Sepal.Length)
mean(iris$Sepal.Length)
median(iris$Sepal.Length)
quartile(iris$Sepal.Length,0.25)
quantile(iris$Sepal.Length,0.25)
quantile(iris$Sepal.Length,0.25)
quantile(iris$Sepal.Length,0.75)
quantile(iris$Sepal.Length,0.75)
iqr=quantile(iris$Sepal.Length,0.75)-quantile(iris$Sepal.Length,0.25)
iqr
sdiris$Sepal.Length)
sd(iris$Sepal.Length)
var(iris$Sepal.Length)
summary(iris)
#q5
v= c(2,1,2,5,1,2,3,4,1,2,2,2,3,3)
names(sort(-table(v)))[1]
#q5
v= c(2,1,2,5,1,2,3,4,1,2,2,2,3,3)
mode=function(v){
return(names(sort(-table(v)))[1])
}
mode(v)
#q1
pbinom(9,12,1/6)-pbinom(6,12,1/6)
#q2
pbinom(84,72,15.2,lower.tail=FALSE)
#q2
pnorm(84,72,15.2,lower.tail=FALSE)
#q3
dpois(0,5)
ppois(48,50,lower.tail=FALSE)
ppois(50,50) - ppois(47,50)
ppois(47,50,lower.tail=FALSE)
ppois(50,50)-ppois(47,50)
#q4
dhyper(3,17,233,5)
#q5
x=0:31
pdfx=dbinom(x,31,0.447)
plot(x,pdfx)
cdfx=pbinom(x,31,0.447)
plot(x,cdfx)
mean=sum(x*pdfx)
mean
#Assignment4
x=c(0,1,2,3,4)
pdfx=c(0.41,0.37,0.16,0.05,0.01)
mean(x*pdfx)
#q1
x<-c(0,1,2,3,4)
p<-c(0.41,0.37,0.16,0.05,0.01)
z1<-sum(x*p)
#Assignment4
x=c(0,1,2,3,4)
pdfx=c(0.41,0.37,0.16,0.05,0.01)
mean(x*pdfx)
sum(x*pdfx)
weighted.mean(x,pdfx)
weighted.mean(pdfx,x)
x%*%pdfx
c(x%*%pdfx)
#q2
Ex = function(t){
return (t*0.1*exp(-0.1*t))
}
integrate(Ex,0,Inf)
integrate(Ex,0,Inf)$value
#q3
x=c(0,1,2,3)
pdfx=c(0.1,0.2,0.2,0.5)
Ex=sum(x*pdfx)
rev=10*Ex-12
rev
#q3
x=c(0,1,2,3)
pd=c(0.1,0.2,0.2,0.5)
m=weighted.mean(x,pd)
10*m-12
Ey=10*Ex-12
Ey
#q4
Ex=function(x){
return (x*0.5*exp(-abs(x)))
}
Ex2=function(x){
return (x*x*0.5*exp(-abs(x)))
}
moment1=Integrate(Ex,1,10)
moment1=integrate(Ex,1,10)
moment2=integrate(Ex2,1,10)
meanx=moment1
meanx
variancex=moment2-moment1^2
variancex=moment2-(moment1^2)
variancex=moment2-(moment1^2)
varx=sum(x^2*r)-meanx^2
variancex=moment2-moment1*moment2
variancex=moment2-moment1^2
moment1=integrate(Ex,1,10)$value
moment2=integrate(Ex2,1,10)$value
meanx=moment1
meanx
variancex=moment2-moment1^2
variancex
#Question 5
f3<- function(x) (3/4)*(1/4^(x-1))
y3<- function(x) (x^2)
x<-c(1,2,3,4,5)
f3(x)
#distribution of a function
distr<-data.frame(x,f3(x))
distr
ans=f3(1)*y3(1)+f3(2)*y3(2)+f3(3)*y3(3)+f3(4)*y3(4)+f3(5)*y3(5)
ans
# at a specific point
ans3=f3(3)*y3(3)
ans3
x<-c(1,2,3,4,5)
f3(x)
#mean
mean<-weighted.mean(x,f3(x))
mean
#variance
var<-ans-mean^2
var
#q5
pdfx=function(x){
return (0.75*(0.25^(x-1)))
}
fy=function(x){
return (x^2)
}
x<-c(1,2,3,4,5)
fy(x)
distr<-data.frame(x,fy(x))
distr
distr<-data.frame(x,pdfx(x)))
distr<-data.frame(x,pdfx(x))
distr
x<-c(1,2,3,4,5)
fy(x)
#q5
pdfx=function(x){
return (0.75*(0.25^(x-1)))
}
fy=function(x){
return (x^2)
}
x<-c(1,2,3,4,5)
fy(x)
pdfy=pdfx(fy(x))
pdfy
distx=rdata.frame(x,pdfx(x))
distx=data.frame(x,pdfx(x))
distrx
distx
disty=data.frame(fy(x),pdfy)
disty
pYatX3=pdfx(fy(3))
pYatX3
weighted.mean(fy(x),pdfy)
#Assignment5
#q1
punif(60,0,60)-punif(45,0,60)
punif(30,0,60)-punif(20,0,60)
#q2
dexp(3,0.5)
x=0:5
pdfx=dexp(x,0.5)
plot(x,dexp)
plot(x,pdfx)
x=seq(0,5,0.05)
pdfx=dexp(x,0.5)
plot(x,pdfx)
pexp(3,0.5)
cdfx=pexp(x,0.5)
plot(x,cdfx)
#Question 1(a)
punif(45,min=0,max=60,lower.tail=FALSE)
#Question 1(b)
punif(30,min=0,max=60,lower.tail=TRUE)-punif(20,min=0,max=60,lower.tail=TRUE)
#Question 2(a)
dexp(3,rate=1/2)
#Question 2(b)
x=seq(0,5,0.2)
plot(x,dexp(x,rate=1/2),type='p',xlab='x',ylab='y')
#Question 2(c)
pexp(3,0.5)
#Question 2(d)
x=seq(0,5,0.2)
plot(x,pexp(x,rate=1/2),type='p',xlab='x',ylab='y')
#Question 2(e)
plot(1:1000,rexp(1000,rate=1/2),type='p',xlab='x',ylab='y')
#Question 3 (a)
pgamma(1,2,scale=1/3,lower.tail = FALSE)
#Question 2(e)
plot(1:1000,rexp(1000,rate=1/2),type='p',xlab='x',ylab='y')
plot(1:1000,xsim,type='p',xlab='x',ylab='y')
xsim=rexp(1000,rate=1/2)
plot(1:1000,xsim,type='p',xlab='x',ylab='y')
plot(density(xsim))
#q3
1-pgamma(1,2,3)
qgamma(0.70,2,3)
integral2(func,0,1,0,1)
#Assignment6
func = function(x,y) {
(2*(2*x+3*y)/5)
}
integral2(func,0,1,0,1)
integral2(func,0,1,0,1)$Q
gx1 = function(y) {
(2*(2+3*y)/5)
}
hy0 = function(x) {
(2*(2*x)/5)
}
integral2(func,0,1,0,1)$Q
integral(gx1,0,1)
integral(hy0,0,1)
(2*(2*x+3*y)/5)*x*y
Exy = function(x,y){
(2*(2*x+3*y)/5)*x*y
}
integral2(Exy,0,1,0,1)
#q2
x=c(0,1,2,3)
y=c(0,1,2)
fxy= function(x,y){
return ((x+y)/30)
}
pdfx=fxy(x,y)
pdfx=c(fxy(0,0:2),fxy(1,0:2),fxy(2,0:2),fxy(3,0:2))
pdfxy=c(fxy(0,0:2),fxy(1,0:2),fxy(2,0:2),fxy(3,0:2))
pdfxy
m1=matrix(pdfxy,nrow=4,ncol=3,byrow=TRUE)
m1
sum(m1)
apply(m1,1,sum)
apply(m1,2,sum)
g=apply(m1,1,sum)
happly(m1,2,sum)
h=apply(m1,2,sum)
func(0,1)/h[2]
func(0,1)
#Question 2 (i)
func1=function(x,y) (x+y)/30
#x=c(0:3)
#y=c(0:2)
m1=matrix(c(func1(0,0:2),func1(1,0:2),func1(2,0:2),func1(3,0:2)),nrow=4,ncol=3,byrow=TRUE)
m1
#Question 2 (ii)
sum(m1) #if sum=1, so it is joint mass function
#Question 2 (iii)
r=apply(m1,1,sum) #row-wise addition
r
#Question 2 (iv)
c=apply(m1,2,sum) #column-wise addition
c
#Question 2 (v)
c[2]
func1(0,1)/c[2]
func(0,1)
fxy(0,1)
fxy(0,1)/h[2]
weighted.mean(x,g)
weighted.mean(y,h)
func2=function(x,y) ((x+y)/30)*x*y
x=c(0:3)
y=c(0:2)
m2=matrix(c(func2(0,0:2),func2(1,0:2),func2(2,0:2),func2(3,0:2)),nrow=4,ncol=3,byrow=TRUE)
m2
meanxy=sum(m2)
meanxy
varx=sum(x^2*r)-meanx^2
meanx=weighted.mean(x,g)
meany=weighted.mean(y,h)
func2=function(x,y) ((x+y)/30)*x*y
x=c(0:3)
y=c(0:2)
m2=matrix(c(func2(0,0:2),func2(1,0:2),func2(2,0:2),func2(3,0:2)),nrow=4,ncol=3,byrow=TRUE)
m2
meanxy=sum(m2)
meanxy
varx=sum(x^2*r)-meanx^2
varx
vary=sum(y^2*c)-meany^2
vary
covariance = (meanxy)-(meanx*meany)
covariance
correlation=covariance/(sqrt(varx)*sqrt(vary))
correlation
#Question 1
n=100
df=99
x=rt(n,df)
hist(x)
#Question 2
n=100
df=c(2,10,25)
r1=rchisq(n,df[1])
r1
r2=rchisq(n,df[2])
r2
r3=rchisq(n,df[3])
r3
#Question 3
x=seq(-6,6,length=100)
x
df=c(1,4,10,30)
dt(x,df[4])
plot(x,dt(x,df[4]),type="l",xlab="t-value",ylab="Density",main="Plot with degree of freedom=30")
dt(x,df[3])
dt(x,df[2])
dt(x,df[1])
dt(x,df[3])
dt(x,df[2])
dt(x,df[1])
for(i in 1:4){
lines(x,dt(x,df[i]),type="l",col=i,main="Comparison of degree of freedom ")
}
for(i in 1:4){
lines(x,dt(x,df[i]),type="l",col=i,main="Comparison of degree of freedom ")
}
#Question 4(i)
df1=10
df2=20
c1=qf(0.95,df1,df2)
c1
#Question 4(ii)
c2=pf(1.5,df1,df2,lower.tail = TRUE)
c2
c3=pf(1.5,df1,df2,lower.tail = FALSE)
c3
#Question 4(iii)
q=c(0.25,0.5,0.75,0.999)
for(i in 1:4)
{
z=qf(q[i],df1,df2)
print(z)
}
#Question 4(iv)
m=rf(1000,df1,df2)
m
hist(m)
######Assignment8
setwd("C:/Storage/WORKSPACE/GitHub/R-Assignments/Ques Sets")
getwd()
df=read.csv("C:/Storage/WORKSPACE/GitHub/R-Assignments/Ques Sets/Clt-data.csv")
colnames(df)
head(df,10)
nrow(df)
ncol(df)
a=mean(df$Wall.Thickness)
print(a)
hist(df$Wall.Thickness)
abline(v=a, col = "red", lwd = 3, lty = 1)
i=1
out<-c()
for(i in 1:9000){
new_10=sample(df$Wall.Thickness,10,replace=TRUE,prob=NULL)
out=append(out, mean(new_10))
}
mean(out)
hist(out)
